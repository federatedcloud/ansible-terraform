---
- name: install docker ce and compose
# install as per https://docs.docker.com/install/linux/docker-ce/centos/
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  tasks:
    - name: install packages for docker ce
      yum: 
        name: "{{ item }}"
        state: latest
      loop: 
        - yum-utils
        - git
        - device-mapper-persistent-data
        - lvm2
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
    - name: Install Docker CE
      package:
        name: docker-ce
        state: latest
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
    - name: Add user to docker group
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
    - name: Install Extra Package for Enterprise Linux
      yum: 
        name: epel-release
        state: latest
    - name: Install python-pip
      yum:
        name: python-pip
        state: latest
    - name: Install Docker Compose
      yum:
        name: docker-compose
        state: latest
- name: install download and install benchmarks repo
  hosts: all
  tasks:
    - name: Create Directory
    # TODO: change the version as docker-nix-mpi-benchmarks is developed
    # ansible git requires empty directory
      file:
        path: ${HOME}/docker-nix-mpi-benchmarks
        state: directory 
    - name: download lake problem
      git: 
        repo: https://github.com/federatedcloud/docker-nix-mpi-benchmarks.git
        dest: ${HOME}/docker-nix-mpi-benchmarks
        version: master
    - name: reset connection for docker group
    # need to reset connection for docker commands
      meta: reset_connection
    - name: create image
    # async is not needed (causes it to terminate early and register if we want to refer to it later) 
      shell: "source build-openmpi.sh"
      args:
        chdir: ${HOME}/Lake_Problem_DPS  
        executable: /bin/bash 
      poll: 0
      register: container
    #- name: stop all containers
    #  shell: "docker stop $(docker ps -aq)"      
